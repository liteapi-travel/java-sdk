/*
 * Lite API
 * The **Lite API** can be used to to do the following  Get room rates & availability for a set of hotels Select a specific hotel with room availability and make a booking Manage the bookings - retrieve and cancel existing bookings Get static content for hotels, search hotels by destination
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.codejournal.maven.swagger2java.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.codejournal.maven.swagger2java.model.RatesbookGuestInfo;
import io.codejournal.maven.swagger2java.model.RatesbookPayment;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Body
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-06-26T12:33:03.375+01:00[Africa/Casablanca]")
public class Body {
  @JsonProperty("prebookId")
  private String prebookId = null;

  @JsonProperty("guestInfo")
  private RatesbookGuestInfo guestInfo = null;

  @JsonProperty("payment")
  private RatesbookPayment payment = null;

  public Body prebookId(String prebookId) {
    this.prebookId = prebookId;
    return this;
  }

   /**
   * prebook id retrived from prebook response
   * @return prebookId
  **/
  @Schema(required = true, description = "prebook id retrived from prebook response")
  public String getPrebookId() {
    return prebookId;
  }

  public void setPrebookId(String prebookId) {
    this.prebookId = prebookId;
  }

  public Body guestInfo(RatesbookGuestInfo guestInfo) {
    this.guestInfo = guestInfo;
    return this;
  }

   /**
   * Get guestInfo
   * @return guestInfo
  **/
  @Schema(required = true, description = "")
  public RatesbookGuestInfo getGuestInfo() {
    return guestInfo;
  }

  public void setGuestInfo(RatesbookGuestInfo guestInfo) {
    this.guestInfo = guestInfo;
  }

  public Body payment(RatesbookPayment payment) {
    this.payment = payment;
    return this;
  }

   /**
   * Get payment
   * @return payment
  **/
  @Schema(description = "")
  public RatesbookPayment getPayment() {
    return payment;
  }

  public void setPayment(RatesbookPayment payment) {
    this.payment = payment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body body = (Body) o;
    return Objects.equals(this.prebookId, body.prebookId) &&
        Objects.equals(this.guestInfo, body.guestInfo) &&
        Objects.equals(this.payment, body.payment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(prebookId, guestInfo, payment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body {\n");
    
    sb.append("    prebookId: ").append(toIndentedString(prebookId)).append("\n");
    sb.append("    guestInfo: ").append(toIndentedString(guestInfo)).append("\n");
    sb.append("    payment: ").append(toIndentedString(payment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
