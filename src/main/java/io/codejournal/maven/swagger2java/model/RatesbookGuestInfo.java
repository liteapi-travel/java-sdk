/*
 * Lite API
 * The **Lite API** can be used to to do the following  Get room rates & availability for a set of hotels Select a specific hotel with room availability and make a booking Manage the bookings - retrieve and cancel existing bookings Get static content for hotels, search hotels by destination
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.codejournal.maven.swagger2java.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * RatesbookGuestInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-06-26T12:33:03.375+01:00[Africa/Casablanca]")
public class RatesbookGuestInfo {
  @JsonProperty("guestFirstName")
  private String guestFirstName = null;

  @JsonProperty("guestLastName")
  private String guestLastName = null;

  @JsonProperty("guestEmail")
  private String guestEmail = null;

  public RatesbookGuestInfo guestFirstName(String guestFirstName) {
    this.guestFirstName = guestFirstName;
    return this;
  }

   /**
   * traveler first name
   * @return guestFirstName
  **/
  @Schema(required = true, description = "traveler first name")
  public String getGuestFirstName() {
    return guestFirstName;
  }

  public void setGuestFirstName(String guestFirstName) {
    this.guestFirstName = guestFirstName;
  }

  public RatesbookGuestInfo guestLastName(String guestLastName) {
    this.guestLastName = guestLastName;
    return this;
  }

   /**
   * traveler last name
   * @return guestLastName
  **/
  @Schema(required = true, description = "traveler last name")
  public String getGuestLastName() {
    return guestLastName;
  }

  public void setGuestLastName(String guestLastName) {
    this.guestLastName = guestLastName;
  }

  public RatesbookGuestInfo guestEmail(String guestEmail) {
    this.guestEmail = guestEmail;
    return this;
  }

   /**
   * traveler email
   * @return guestEmail
  **/
  @Schema(required = true, description = "traveler email")
  public String getGuestEmail() {
    return guestEmail;
  }

  public void setGuestEmail(String guestEmail) {
    this.guestEmail = guestEmail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RatesbookGuestInfo ratesbookGuestInfo = (RatesbookGuestInfo) o;
    return Objects.equals(this.guestFirstName, ratesbookGuestInfo.guestFirstName) &&
        Objects.equals(this.guestLastName, ratesbookGuestInfo.guestLastName) &&
        Objects.equals(this.guestEmail, ratesbookGuestInfo.guestEmail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(guestFirstName, guestLastName, guestEmail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RatesbookGuestInfo {\n");
    
    sb.append("    guestFirstName: ").append(toIndentedString(guestFirstName)).append("\n");
    sb.append("    guestLastName: ").append(toIndentedString(guestLastName)).append("\n");
    sb.append("    guestEmail: ").append(toIndentedString(guestEmail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
